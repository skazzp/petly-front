{"version":3,"file":"static/js/158.28f741b5.chunk.js","mappings":"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","sources":["components/RegistrationForm/Validation.js","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import * as yup from 'yup';\nrequire('yup-phone');\nexport const schema = yup.object().shape({\n  email: yup.string().email().required('enter your E-mail, please'),\n  password: yup\n    .string()\n    .min(7, 'min Password 7 simvols')\n    .max(32, 'max Password 32 simvols')\n    .required('enter your Password, please'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('confirm password, please'),\n  name: yup\n    .string()\n    .min(2, 'min name 2 simvols')\n    .max(16, 'max name 16 simvols')\n    .required('enter your Name, please'),\n  city: yup.string().required('chenge your city, please'),\n  phone: yup\n    .string()\n    .phone()\n    .typeError('not Valid phone')\n    .required('enter your phone, please'),\n});\n","import {\n  Div,\n  Title,\n  Label,\n  Input,\n  Form,\n  Button,\n  Span,\n  LinkRegistration,\n  ButtonBack,\n  ButtonRegister,\n  SelectContainer,\n} from './RegistrationForm.styled';\nimport { selectStyles } from './selectStyles';\nimport Select from 'react-select';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { schema } from './Validation';\nimport { useEffect, useState } from 'react';\nimport { registerUser } from 'redux/auth/authOperation';\nimport { selectError, selectToken } from 'redux/auth/authSelectors';\nimport { useWindowSize } from '@react-hook/window-size';\nimport Confetti from 'react-confetti';\nimport Data from '../../assets/City.json';\nimport InputMask from 'react-input-mask';\nimport { Validation } from 'utility/validationStyle';\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const [formChenge, SetFormChenge] = useState(false);\n  const [emailErrorMassege, setEmailErrorMassege] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [emailErrorFixed, setEmailErrorFixed] = useState(false);\n\n  const { width, height } = useWindowSize();\n  const errorDB = useSelector(selectError);\n  const token = useSelector(selectToken);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      name: '',\n      city: '',\n      phone: '',\n    },\n    validationSchema: schema,\n\n    onSubmit: values => {\n      const user = {\n        email: values.email,\n        password: values.password,\n        name: values.name,\n        city: values.city,\n        phone: values.phone,\n      };\n      dispatch(registerUser(user));\n    },\n  });\n\n  // const onChangeInputEmail = () => {\n\n  // }\n  const city = formik.values.city;\n  const setCity = city => {\n    formik.setValues(prev => ({\n      ...prev,\n      city: city,\n    }));\n  };\n  const onClickNext = e => {\n    e.preventDefault();\n\n    if (\n      !formik.values.email &&\n      !formik.values.password &&\n      !formik.values.confirmPassword\n    )\n      return;\n    if (\n      formik.errors.email ||\n      formik.errors.password ||\n      formik.errors.confirmPassword\n    )\n      return;\n\n    SetFormChenge(true);\n  };\n  const Selectoptions = Data.map(i => ({\n    value: `${i.City},${i.District}`,\n    label: `${i.City}, ${i.District}`,\n  }));\n  useEffect(() => {\n    if (emailError !== formik.values.email) {\n      setEmailErrorMassege('');\n      setEmailErrorFixed(false);\n    }\n    // eslint-disable-next-line\n  }, [emailErrorFixed, formik.values.email]);\n\n  useEffect(() => {\n    if (errorDB === 'Email in use') {\n      setEmailErrorMassege('Email in use');\n      setEmailError(formik.values.email);\n      setEmailErrorFixed(true);\n      SetFormChenge(false);\n    }\n    if (errorDB === '\"email\" must be a valid email') {\n      setEmailErrorMassege('Email must be a valid');\n      setEmailError(formik.values.email);\n      setEmailErrorFixed(true);\n      SetFormChenge(false);\n    }\n\n    if (!errorDB) {\n      setEmailErrorMassege('');\n      setEmailError('');\n      setEmailErrorFixed(false);\n      SetFormChenge(false);\n    }\n    // eslint-disable-next-line\n  }, [errorDB]);\n\n  //  console.log(emailErrorFixed);\n  //   console.log(emailError);\n  //   console.log(formik.values.email);\n  return (\n    <Div>\n      <Title>Registration</Title>\n      {!formChenge || emailErrorFixed ? (\n        <Form>\n          <Label>\n            <Input\n              placeholder=\"E-mail\"\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              onBlur={formik.handleBlur}\n              onChange={e => formik.handleChange(e)}\n              value={formik.values.email}\n            ></Input>\n            {(formik.errors.email && formik.touched.email) || emailError ? (\n              <Validation>\n                {formik.errors.email || emailErrorMassege}\n              </Validation>\n            ) : null}\n          </Label>\n          <Label>\n            <Input\n              placeholder=\"Password\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.password}\n            ></Input>\n            {formik.errors.password && formik.touched.password ? (\n              <Validation>{formik.errors.password}</Validation>\n            ) : null}\n          </Label>\n          <Label>\n            <Input\n              placeholder=\"Confirm password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              type=\"password\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.confirmPassword}\n            ></Input>\n            {formik.errors.confirmPassword && formik.touched.confirmPassword ? (\n              <Validation>{formik.errors.confirmPassword}</Validation>\n            ) : null}\n          </Label>\n          <Button onClick={e => onClickNext(e)}>Next</Button>\n        </Form>\n      ) : (\n        <Form onSubmit={formik.handleSubmit}>\n          <Label>\n            <Input\n              placeholder=\"Name\"\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.name}\n            ></Input>\n            {formik.errors.name && formik.touched.name ? (\n              <Validation>{formik.errors.name}</Validation>\n            ) : null}\n          </Label>\n          <Label>\n            <SelectContainer>\n              <Select\n                placeholder=\"City\"\n                defaultValue={city}\n                id=\"city\"\n                name=\"city\"\n                onBlur={formik.handleBlur}\n                styles={selectStyles()}\n                options={Selectoptions}\n                onChange={e => setCity(e.value)}\n                defaultInputValue={city}\n              ></Select>\n            </SelectContainer>\n\n            {formik.errors.city && formik.touched.city ? (\n              <Validation>{formik.errors.city}</Validation>\n            ) : null}\n          </Label>\n          <Label>\n            <InputMask\n              placeholder=\"Phone\"\n              name=\"phone\"\n              id=\"phone\"\n              mask=\"+38(099)999-99-99\"\n              style={{\n                background: 'none',\n                border: 0,\n                width: '100%',\n                height: '100%',\n                fontFamily: 'Manrope',\n                fontWeight: 400,\n                outline: 'none',\n                fontSize: 18,\n                lineHeight: 25,\n              }}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.phone}\n            />\n            {formik.errors.phone && formik.touched.phone ? (\n              <Validation>{formik.errors.phone}</Validation>\n            ) : null}\n          </Label>\n          <ButtonRegister type=\"submit\">Registration</ButtonRegister>\n          <ButtonBack\n            onClick={e => {\n              e.preventDefault();\n              SetFormChenge(false);\n            }}\n          >\n            Back\n          </ButtonBack>\n        </Form>\n      )}\n\n      <Span>\n        Don't have an account?{' '}\n        <LinkRegistration type=\"button\" to=\"/login\">\n          Login\n        </LinkRegistration>\n      </Span>\n      {token ? (\n        <Confetti recycle={false} width={width} height={height} />\n      ) : null}\n    </Div>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport { Div, GlobalStyleRegistration } from './RegistrationPage.styled';\n// import img from '../../assets/images/bg/bgSvg.svg';\nconst RegistrationPage = () => {\n \n  return (\n    <Div>\n      <GlobalStyleRegistration/>\n      <RegistrationForm />\n    </Div>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["require","schema","yup","shape","email","required","password","min","max","confirmPassword","oneOf","name","city","phone","typeError","dispatch","useDispatch","useState","formChenge","SetFormChenge","emailErrorMassege","setEmailErrorMassege","emailError","setEmailError","emailErrorFixed","setEmailErrorFixed","useWindowSize","width","height","errorDB","useSelector","selectError","token","selectToken","formik","useFormik","initialValues","validationSchema","onSubmit","values","user","registerUser","Selectoptions","Data","i","value","City","District","label","useEffect","placeholder","id","type","onBlur","handleBlur","onChange","e","handleChange","errors","touched","onClick","preventDefault","onClickNext","handleSubmit","defaultValue","styles","selectStyles","options","setValues","prev","setCity","defaultInputValue","mask","style","background","border","fontFamily","fontWeight","outline","fontSize","lineHeight","to","recycle"],"sourceRoot":""}