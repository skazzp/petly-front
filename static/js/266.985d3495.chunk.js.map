{"version":3,"file":"static/js/266.985d3495.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/Valodation.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 280px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    background: #ffffff;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    width: 608px;\n    height: 473px;\n    padding: 60px 80px 60px 80px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 618px;\n    height: 473px;\n    z-index: 1;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 33px;\n  letter-spacing: 0.04em;\n  color: #111111;\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 49px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const Form = styled.form`\n  min-width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  background: none;\n  height: 40px;\n  width: 280px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  align-items: center;\n  justify-content: center;\n  border-radius: 40px;\n  margin-bottom: 13px;\n  padding: 5px 14px;\n  :focus,\n  :hover {\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 448px;\n    height: 52px;\n\n    background: #fdf7f2;\n    padding: 14px 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 16px;\n    width: 458px;\n  }\n`;\n\nexport const Input = styled.input`\n  outline: none;\n  background: none;\n  border: none;\n  box-shadow: 0;\n  padding: 0;\n  width: 100%;\n  min-height: 100%;\n  font-family: 'Manrope';\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 25px;\n  ::placeholder {\n    font-family: 'Manrope';\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 25px;\n  }\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  color: #ffffff;\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n\n  width: 100%;\n  height: 44px;\n  border-radius: 20px;\n  background: #f59256;\n  border: none;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 13px;\n  :active {\n    transform: translateY(2px);\n  }\n  :focus,\n  :hover {\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.25);\n    /* box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); */\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 44px;\n    font-weight: 600;\n    font-size: 18px;\n    margin-top: 24px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 16px;\n    height: 48px;\n    margin-top: 24px;\n  }\n`;\nexport const Span = styled.span`\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  align-items: center;\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: rgba(17, 17, 17, 0.6);\n  :focus,\n  :hover {\n  }\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\nexport const LinkRegistration = styled(Link)`\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  :focus,\n  :hover {\n  }\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const ButtonGoogle = styled.a`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #000000;\n  background-color: #ffffff;\n  gap: 10px;\n  cursor: pointer;\n\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n\n  width: 100%;\n  height: 44px;\n  border-radius: 20px;\n  border: ${p => p.theme.borders.normal};\n  /* margin-top: 30px; */\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 10px;\n\n  :focus,\n  :hover {\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.25);\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 44px;\n    font-weight: 600;\n    font-size: 18px;\n    /* margin-top: 24px; */\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 48px;\n    /* margin-top: 24px; */\n  }\n`;\n\nexport const GoogleIcon = styled.svg`\n  width: 22px;\n  height: 22px;\n\n  @media screen and (min-width: 768px) {\n    width: 30px;\n    height: 30px;\n  }\n`;\n","import * as yup from 'yup';\n\nexport const schema = yup.object().shape({\n  email: yup.string().email().required('enter your E-mail, please'),\n  password: yup\n    .string()\n    .min(7, 'min Password 7 simvols')\n    .max(32, 'max Password 32 simvols')\n    .required('enter your Password, please'),\n});\n","import {\n  Div,\n  Title,\n  Label,\n  Input,\n  Form,\n  Button,\n  Span,\n  LinkRegistration,\n  ButtonGoogle,\n  GoogleIcon,\n} from './LoginForm.styled';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { schema } from './Valodation';\nimport { loginUser } from 'redux/auth/authOperation';\nimport { useEffect, useState } from 'react';\nimport { selectError, selectToken } from 'redux/auth/authSelectors';\nimport { useWindowSize } from '@react-hook/window-size';\nimport Confetti from 'react-confetti';\nimport { Validation } from 'utility/validationStyle';\nimport icons from '../../assets/images/icons.svg';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const DbError = useSelector(selectError);\n  const [errorMassege, setErrorMassege] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [errorFixed, setErrorFixed] = useState(false);\n  const token = useSelector(selectToken);\n  const { width, height } = useWindowSize();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n\n    onSubmit: values => {\n      if (errorFixed) {\n        return;\n      }\n      if (\n        emailError === formik.values.email ||\n        passwordError === formik.values.password\n      ) {\n      }\n      dispatch(loginUser(formik.values));\n      setErrorMassege('');\n      setEmailError('');\n      setPasswordError('');\n    },\n  });\n\n\n\n  useEffect(() => {\n    if (DbError) {\n      setErrorMassege(DbError);\n      setEmailError(formik.values.email);\n      setPasswordError(formik.values.password);\n      setErrorFixed(true);\n    }\n    // eslint-disable-next-line\n  }, [DbError]);\n\n  useEffect(() => {\n    if (errorFixed) {\n      if (\n        emailError !== formik.values.email ||\n        passwordError !== formik.values.password\n      ) {\n        setErrorMassege('');\n        setEmailError('');\n        setPasswordError('');\n        setErrorFixed(false);\n      }\n    }\n    // eslint-disable-next-line\n  }, [errorFixed, formik.values.email, formik.values.password]);\n\n  return (\n    <Div>\n      <Title>Login</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Label>\n          <Input\n            placeholder=\"E-mail\"\n            id=\"email\"\n            name=\"email\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          ></Input>\n          {(formik.errors.email && formik.touched.email) || errorMassege ? (\n            <Validation>{formik.errors.email || errorMassege}</Validation>\n          ) : null}\n        </Label>\n        <Label>\n          <Input\n            placeholder=\"Password\"\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.confirmPassword}\n          ></Input>\n          {formik.errors.password && formik.touched.password ? (\n            <Validation>{formik.errors.password}</Validation>\n          ) : null}\n        </Label>\n        <Button type=\"submit\">Login</Button>\n        <ButtonGoogle href=\"https://petly-bc26.cyclic.app/auth/google\">\n          <p>Login with </p>\n          <GoogleIcon>\n            <use href={icons + '#icon-google-logo'}></use>\n          </GoogleIcon>\n          <p>Google</p>\n        </ButtonGoogle>\n      </Form>\n      <Span>\n        Don't have an account?{' '}\n        <LinkRegistration type=\"button\" to=\"/register\">\n          Register\n        </LinkRegistration>\n      </Span>\n      {token ? (\n        <Confetti recycle={false} width={width} height={height} />\n      ) : null}\n    </Div>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  padding-top: 42px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 204px;\n    padding-bottom: 299px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 80px;\n    padding-bottom: 147px;\n  }\n`;\n","import LoginForm from \"components/LoginForm/LoginForm\";\nimport { GlobalStyleRegistration } from \"pages/RegistrationPage/RegistrationPage.styled\";\nimport { Div } from \"./LoginPage.styled\";\n\nconst LoginPage = () => {\n    return (<Div>\n        <GlobalStyleRegistration/><LoginForm /></Div>)\n}\n \nexport default LoginPage;"],"names":["Div","styled","Title","Form","Label","Input","Button","Span","LinkRegistration","Link","ButtonGoogle","p","theme","borders","normal","GoogleIcon","schema","yup","shape","email","required","password","min","max","dispatch","useDispatch","DbError","useSelector","selectError","useState","errorMassege","setErrorMassege","emailError","setEmailError","passwordError","setPasswordError","errorFixed","setErrorFixed","token","selectToken","useWindowSize","width","height","formik","useFormik","initialValues","validationSchema","onSubmit","values","loginUser","useEffect","handleSubmit","placeholder","id","name","type","onChange","handleChange","onBlur","handleBlur","value","errors","touched","confirmPassword","href","icons","to","recycle"],"sourceRoot":""}